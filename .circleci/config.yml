version: 2

prod_filters: &prod_filters # Ignores any commit on any branch by default
  branches:
    ignore: /.*/

  # Only act on semver version tags
  tags:
    only:
      - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/

jobs:
  # Runs the tests, including integration
  test:
    docker:
      - image: circleci/node:11.10.1
      - image: camunda/zeebe:0.18.0
    working_directory: ~/zeebe-client-node-js
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: npm-install
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Waiting for Zeebe to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 26500 && echo success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Zeebe && exit 1
      - run:
          name: test
          command: npm run test:integration
      - run:
          name: build-typescript
          command: npm run build

  # Publishes to npm
  publish:
    docker:
      - image: circleci/node:11.10.1
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: npm-install
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm test
      - run:
          name: build
          command: npm run build
      - run:
          name: npmrc
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
      - run:
          name: publish
          command: |
            if grep -qF "\"version\": \"$CIRCLE_TAG\"," package.json;then
              npm publish
            else
              echo "The package.json does not match the Git tag for this release"
              exit 1;
            fi

workflows:
  version: 2
  test:
    jobs:
      - test
  build-master: # Will only run when a tag is pushed
    jobs:
      - test:
          filters: *prod_filters
      - publish:
          requires:
            - test
          filters: *prod_filters
          context: Docker
